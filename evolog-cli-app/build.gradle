plugins {
    id 'alpha.java-application-conventions'
    id 'maven-publish'
}

dependencies {
    implementation project(':alpha-solver')
    implementation project(':alpha-commons')

    implementation group: 'commons-cli',        name: 'commons-cli',          version: '1.3.1'
    implementation group: 'org.apache.poi',     name: 'poi',                  version: '4.1.1'
    implementation group: 'org.apache.poi',     name: 'poi-ooxml',            version: '4.1.1'
    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.1'
}

def mainClassName = 'at.ac.tuwien.kr.alpha.evolog.Main'

application {
    mainClass = mainClassName
}

task bundledJar(type: Jar) {
	manifest {
		attributes 'Main-Class': mainClassName
	}

	from {
		configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
		// TODO: is there a neater way to do this?
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}

	archiveFileName = "${project.name}-bundled.jar"
	
	/*
	 * In order to make sure we don't overwrite NOTICE and LICENSE files coming from dependency
	 * jars with each other, number them while copying
	 */
	int i = 1
	rename { name -> (name.equals("NOTICE.txt") || name.equals("NOTICE")) ? "NOTICE." + (i++) + ".txt" :  null }

	int j = 1
	rename { name -> (name.equals("LICENSE.txt") || name.equals("LICENSE")) ? "LICENSE." + (j++) + ".txt" : null }

	with jar
}

java {
	withSourcesJar()
}

test {
	useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'at.ac.tuwien.kr.alpha'
            artifactId = 'evolog-cli-app'
            version = '0.8-SNAPSHOT'

            from components.java
        }
    }
}
